name: 'CI'

on:
  pull_request:
  push:
    branches:
      - canary
      - main

jobs:
  build-test-release:
    name: Build & Test all packages on ${{ matrix.os }}, Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # Test all packages with:
        # 1. Maintenance LTS 14.20.0
        # 2. Active LTS
        # 3. Current (i.e. the latest Node.js version available)
        # https://nodejs.org/en/
        # https://nodejs.org/en/about/releases/
        node: ['16.17.0', 'current']
        hapi: ['20.0.0', 'latest']
    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3

      - name: ⚙️ Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      # - name: 👀 Check npm version
      #   run: npm version

      - name: ⬇️ Install dependencies
        run: npm ci

      - name: ⬇️ Install Hapi ${{ matrix.hapi }}
        run: npm install @hapi/hapi@${{ matrix.hapi }}

      - name: 🛡️ Audit dependencies (audit-level high)
        if: ${{ matrix.os }} == 'ubuntu-latest'
        # https://docs.npmjs.com/cli/v8/commands/npm-audit#audit-level
        run: npm audit --audit-level high

      - name: 🛡️ Audit dependencies (audit-level moderate)
        continue-on-error: true
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: npm audit --audit-level moderate

      - name: 📦 Build all libraries
        run: npm run build:libs

      - name: 🔍 Test library @jackdbd/hapi-request-event-predicates
        run: npx turbo run test:ci --filter hapi-request-event-predicates

      - name: 🔍 Test library @jackdbd/hapi-github-issue-plugin
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_BOT_GITHUB_TOKEN }}
        run: npx turbo run test:ci --filter hapi-github-issue-plugin

      - name: 🔍 Test library @jackdbd/hapi-healthcheck-plugin
        run: npx turbo run test:ci --filter hapi-healthcheck-plugin

      - name: 🔍 Test library @jackdbd/hapi-logger-plugin
        run: npx turbo run test:ci --filter hapi-logger-plugin
      
      - name: 🔍 Test library @jackdbd/hapi-telegram-plugin
        env:
          TELEGRAM: ${{ secrets.TELEGRAM }}
        run: npx turbo run test:ci --filter hapi-telegram-plugin

      - name: ✨ Cleanup issues created during tests
        env:
          GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_BOT_GITHUB_TOKEN }}
        run: npx zx scripts/bulk-delete-issues.mjs
